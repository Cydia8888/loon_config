#zqzess configure
#Update Date: 2022.11.21 12:19:30 +0000
#author: zqzess

[General]
ipv6 = false
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,e.crashlynatics.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# [DNS] => DNS 服务器
dns-server = system,119.29.29.29,114.114.114.114,223.5.5.5,8.8.8.8
allow-udp-proxy = false
# Wi-Fi 访问
# > 允许 Wi-Fi 网络下其它设备访问
allow-wifi-access = true
wifi-access-http-port = 7222
wifi-access-socks5-port = 7221
# > 代理测速 URL
proxy-test-url = http://www.qualcomm.cn/generate_204
# > 测速超时 (s)
test-timeout = 3
interface-mode = auto
# > 解决一些ip请求无法匹配域名类规则的问题。real-ip指定的域名将不返回fake ip响应，直接将dns请求发往目标dns服务器
# 解析器
resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/scripts/sub-store-parser.js
# ssid-trigger参数，用于指定SSID下流量模式切换，（default表示默认，cellular表示蜂窝，目前支持三种值：rule，direct，proxy） 
# ssid-trigger="default":rule,"cellular":rule,"ASUS":direct,"TPLINK":proxy 


[Proxy]
# 内置 DIRECT、REJECT 策略
# 内置 PROXY 指向本地节点或者订阅节点中的任何一个（有本地节点默认指向第一个本地节点，当没有本地节点但有订阅节点时，指向第一个订阅的第一个节点，本地节点和订阅节点都不存在时指向DIRECT）

#ss
#ss1 = Shadowsocks,example.com,443,aes-128-gcm,"password",fast-open=false,udp=true
#ss2 = Shadowsocks,example2.com,443,chacha20,"password",fast-open=true,udp=true
#ss+simple obfs
#ssObfs1 = Shadowsocks,example.com,80,aes-128-gcm,"password",obfs-name=http,obfs-host=www.micsoft.com,fast-open=true,udp=true
#ssObfs2 = Shadowsocks,example.com,443,aes-128-gcm,"password",obfs-name=tls,obfs-host=www.micsoft.com,fast-open=true,udp=true

#ssr
# 节点名称 = 协议，服务器地址，端口，加密方式，密码，obfs-name，{obfs-params}，protocol-name，{protocols-param}
#ssr1 = ShadowsocksR,example.com,443,aes-256-cfb,"password",orig,{},http_simple,{download.windows.com},fast-open=false,udp=true
#ssr2 = ShadowsocksR,example.com,10076,aes-128-cfb,"password",auth_chain_a,{9555:loon},http_post,{download.windows.com},fast-open=false,udp=true
#ssr3 = ShadowsocksR,example.com,10076,chacha20,"password",auth_aes128_md5,{9555:loon},tls1.2_ticket_auth,{download.windows.com},fast-open=false,udp=true
#ssr4 = ShadowsocksR,example.com,10076,chacha20-ietf,"password",auth_aes128_sha1,{9555:loon},plain,{},fast-open=false,udp=true

#http
#http1 = http,example.com,80
#http2 = http,example.com,80,username,"password"

#https
#https1 = https,example.com,443
#https2 = https,example.com,443,username,"password"
#https3 = https,example.com,443,username,"password",skip-cert-verify:true,tls-name:example.com

#vmess+tcp
# 节点名称 = 协议，服务器地址，端口，加密方式，UUID，传输方式:(tcp/ws),path：websocket握手header中的path，host：websocket握手header中的path，over-tls:是否tls，tls-name：tls名字，skip-cert-verify：是否跳过证书校验（默认否）
#vmess1 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:tcp,path:/,host:v3-dy-y.ixigua.com,over-tls:false
#vmess+tcp+tls
#vmess2 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:tcp,path:/,host:v3-dy-y.ixigua.com,over-tls:true,tls-name:example.com,skip-cert-verify:true
#vmess+ws
#vmess3 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:ws,path:/,host:v3-dy-y.ixigua.com,over-tls:false
#vmess+wss
#vmess4 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:ws,path:/,host:v3-dy-y.ixigua.com,over-tls:true,tls-name:example.com,skip-cert-verify:true
#trojan
#trojan1 = trojan,example.com,443,"password",skip-cert-verify:false,tls-name:example.com
#trojan2 = trojan,example.com,443,"password",skip-cert-verify:true,tls-name:example.com

[Remote Proxy]
# 订阅节点
# 别名 = 订阅URL
#Subs = https://example/server-complete.txt
#Subs2 = https://example2/server-complete.txt

[Remote Filter]
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。
#Netflix = NodeSelect,Subs
#Hulu = NameKeyword,Subs,Subs2,FilterKey = Hulu
#HK = NameRegex,Subs,FilterKey = *HK
香港 = NameRegex, FilterKey = "(?i)(港|HK|Hong)"
台湾 = NameRegex, FilterKey = "(?i)(台|TW|Tai)"
日本 = NameRegex, FilterKey = "(?i)(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan)"
韩国 = NameRegex, FilterKey = "(?i)(KR|Korea|KOR|首尔|韩|韓)"
美国 = NameRegex, FilterKey = "(?i)(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States)"
新加坡 = NameRegex, FilterKey = "(?i)(新加坡|坡|狮城|SG|Singapore)"
俄罗斯 = NameRegex, FilterKey = "(?i)(俄罗斯|俄|俄国|RU|Russia)"
网易解锁 = NameRegex, FilterKey = "(?i)(unblock|music|Music|云音乐|🎧)"

[Proxy Group]
# url-test模式，给提供的url发出http header请求，根据返回结果，选择测速最快的节点，默认间隔600s，测速超时时间5s，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto = url-test,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# fallback模式，和url-test类似，不同的是会根据顺序返回第一个可用的节点，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto1 = fallback,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# 别名 = ssid，默认 = 策略， 蜂窝 = 策略， ssid名称 = 策略
#SSID = ssid, default = PROXY, cellular = DIRECT, "DivineEngine" = PROXY
#负载均衡，可选三种算法：random：随机选择策略组可用节点，round-robin：轮询策略组可用节点，pcc：在random基础上，针对相同host使用同一节点，此处url用来测试节点可用性，每隔interval进行一次测速，max-timeout参数用于筛选测试时间超过max-timeout的节点为不可用节点
#LoadBalance = load-balance,node1,node2,remoteNodes, url = http://bing.com, interval = 600,algorithm = pcc, max-timeout=3000
# 广告模式
#Advertising = select,REJECT,DIRECT
# 白名单模式 PROXY，黑名单模式 DIRECT
#Final = select,PROXY,DIRECT

# 节点选项
PROXY = select,Auto,Subs,比特云,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Proxy.png
#自定义
节点选择 = select,PROXY,Auto,香港节点,狮城节点,美国节点,台湾节点,韩国节点,日本节点,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Bypass.png
Auto = url-test,scy,url = http://bing.com/,interval = 600,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
广告屏蔽 = select,REJECT,DIRECT,节点选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Reject.png
🍏苹果服务 = select,DIRECT,节点选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple.png
网易音乐 = select,DIRECT,解锁节点,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netease_Music.png
Spotify = select,DIRECT,PROXY,节点选择,美国节点,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png
Netflix = select,节点选择,狮城节点,香港节点,台湾节点,美国节点,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix.png
YouTube = select,节点选择,香港节点,狮城节点,韩国节点,美国节点,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png
Telegram = select,节点选择,香港节点,狮城节点,美国节点,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png
PayPal = select,PROXY,节点选择,DIRECT,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/PayPal.png
国外媒体 = select,节点选择,狮城节点,香港节点,台湾节点,韩国节点,美国节点,日本节点,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Streaming.png
Outside = select,PROXY,节点选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png
bilibili = select,DIRECT,节点选择,香港节点,台湾节点,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/bilibili_3.png
大陆 = select,DIRECT,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/China.png
香港节点 = select,香港,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png
台湾节点 = select,台湾,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Taiwan.png
狮城节点 = select,新加坡,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png
韩国节点 = select,韩国,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Korea.png
日本节点 = select,日本,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png
美国节点 = url-test,美国,url = http://www.qualcomm.cn/generate_204,interval = 600,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png
解锁节点 = select,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netease_Music_Unlock.png
# 白名单模式 PROXY，黑名单模式 DIRECT
其他 = select,DIRECT,节点选择,Outside,PROXY,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png
[Rule]
#本地规则
# Local RULE
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR
# Strategy:DIRECT,Proxy,REJECT
# Options:force-remote-dns(Default:false),no-resolve
#DOMAIN,google.com,PROXY
DOMAIN-KEYWORD,announce,DIRECT
DOMAIN-KEYWORD,torrent,DIRECT
DOMAIN-KEYWORD,tracker,DIRECT
DOMAIN-SUFFIX,smtp,DIRECT
URL-REGEX,(Subject|HELO|SMTP),DIRECT
IP-CIDR,1.1.1.1/24,DIRECT
# GeoIP China
GEOIP,CN,DIRECT
FINAL,其他

[Remote Rule]
# Remote Rule
# 订阅规则URL,策略
# PROXY
#https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rule/ExampleRule.list,policy=PROXY,enabled=false
https://github.com/zqzess/rule_for_quantumultX/blob/master/Surge/List/AdBlock.list?raw=true, policy=广告屏蔽, tag=广告, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Apple/Apple.list, policy=🍏苹果服务, tag=苹果, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/NetEaseMusic/NetEaseMusic.list, policy=网易音乐, tag=网易云, enabled=false
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Surge/Netflix/Netflix.list, policy=Netflix, tag=Netflix, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Surge/YouTube/YouTube.list, policy=YouTube, tag=YuTube, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Telegram/Telegram.list, policy=Telegram, tag=Telegram, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/PayPal.list, policy=PayPal, tag=PayPal, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Music/Spotify.list, policy=Spotify, tag=Spotify, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Surge/GlobalMedia/GlobalMedia.list, policy=国外媒体, tag=国外媒体, enabled=true
https://raw.githubusercontent.com/Loyalsoldier/surge-rules/release/gfw.txt, policy=Outside, tag=Outside, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/StreamingSE.list, policy=bilibili, tag=bilibili, enabled=true

https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/China.list, policy=大陆, tag=大陆, enabled=true

[Host]
*.taobao.com = server:223.5.5.5
*.tmall.com = server:223.5.5.5
*.alipay.com = server:223.5.5.5
*.alicdn.com = server:223.5.5.5
*.aliyun.com = server:223.5.5.5
*.jd.com = server:119.28.28.28
*.qq.com = server:119.28.28.28
*.tencent.com = server:119.28.28.28
*.weixin.com = server:119.28.28.28
*.bilibili.com = server:119.29.29.29
hdslb.com = server:119.29.29.29
*.163.com = server:119.29.29.29
*.126.com = server:119.29.29.29
*.126.net = server:119.29.29.29
*.127.net = server:119.29.29.29
*.netease.com = server:119.29.29.29
*.mi.com = server:119.29.29.29
*.xiaomi.com = server:119.29.29.29

[URL Rewrite]
enable = true
# Redirect Google Search Service
#^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302

[Remote Rewrite]
# 订阅 URL Rewrite
# 订阅url,别名(可选)
https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list, tag=auto(Loon自带), enabled=false

[Script]
enable = true
# http-request 处理请求的脚本
# http-response 处理请求响应的脚本
# cron 定时脚本
# network-changed   网络发生变化触发脚本

# http-request ^https?:\/\/(www.)?(example)\.com script-path=localscript.js,tag = requestScript,enable=true
# http-response ^https?:\/\/(www.)?(example)\.com script-path=https://example.com/loon.js,timeout=10,requires-body = true,tag = responseScript,enable=true
# cron "0 8 * * *" script-path=cron.js,tag = responseScript,enable=true

network-changed script-path=https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Script/netChanged.js, enabled=false, tag=changeModel(Loon自带)

[Remote Script]
# https://example.com/loon.js, tag=scripts, enable=true

[Plugin]
# plugin-url tag=tag,proxy=插件中PROXY所指向的策略,enable=true
# plugin策略可设置为DIRECT,REJECT,PROXY，其中PROXY为用户在app中手动映射的策略，rule后不跟随策略默认使用PROXY
# example: https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,tag=boxjs,enable=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/Rewrite.plugin, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/SkipProxy.plugin, tag=SkipProxy, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/ReFix.plugin, policy=Outside, tag=规则修正, enabled=true
https://github.com/chavyleung/scripts/raw/master/box/rewrite/boxjs.rewrite.loon.plugin, policy=Outside, tag=boxjs, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/Qsearch.plugin, policy=Outside, tag=safari聚合搜索百度引擎, enabled=true
https://github.com/VirgilClyne/iRingo/blob/main/plugin/Siri.plugin?raw=true, policy=美国节点, tag= iRingo for Siri & Search, enabled=true
https://github.com/VirgilClyne/iRingo/blob/main/plugin/Weather.plugin?raw=true, policy=美国节点, tag= iRingo for 🌤 Weather, enabled=false
https://raw.githubusercontent.com/app2smile/rules/master/plugin/spotify.plugin, tag=spotify解锁, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/AdBlock.plugin, policy=Outside, tag=zqzess自用广告屏蔽插件, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/FanQieNovel.plugin, policy=Outside, tag=番茄小说去广告插件, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/QMusicAd.plugin, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/QzoneAdBlock.plugin, policy=Outside, tag=qq空间广告屏蔽插件, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/bilibili.plugin, policy=Outside, tag=Bilibili增强插件, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/kuwo.plugin, policy=Outside, tag=酷我音乐增强插件, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/zhihu.plugin, policy=Outside, tag=知乎增强插件, enabled=true
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Unlock/TikTokUS.plugin, policy=美国节点, tag=tiktok美区, enabled=false
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/BaiduAdBlock.plugin, policy=Outside, tag=百度系广告屏蔽, enabled=false
https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/Loon.plugin, policy=DIRECT, tag=订阅解析器, enabled=false

[MITM]
ca-p12 = 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
ca-passphrase = 38FSUYRH
hostname = 
enable = true
skip-server-cert-verify = true
#ca-p12 =
#ca-passphrase =